// <auto-generated />
using System;
using API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Models.ExcelData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("date");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("IdLoteEntrega")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QtdProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoteEntrega");

                    b.ToTable("ExcelDatas");
                });

            modelBuilder.Entity("API.Models.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntregaMenor")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataImportacao")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoLoteArquivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumeroRegistros")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTotalProdutos")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotalImportado")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.ToTable("LoteEntregas");
                });

            modelBuilder.Entity("API.Models.ExcelData", b =>
                {
                    b.HasOne("API.Models.Lote", "Lote")
                        .WithMany("ExcelDatas")
                        .HasForeignKey("IdLoteEntrega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("API.Models.Lote", b =>
                {
                    b.Navigation("ExcelDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
